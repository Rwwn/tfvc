name: release
on:
  push:
    branches:
      - main
    tags-ignore:
      - "*"
permissions:
  contents: write
  packages: write
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      new_release_version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      - run: git fetch --force --tags
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
      - name: Login to docker.io registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: go install github.com/goreleaser/goreleaser@latest
      - id: semantic-release
        name: Semantic release + goreleaser
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
  release-docs:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install docs dependencies
        run: pip install mkdocs mkdocs-material mike
      - name: Deploy the latest docs ðŸš€
        if: jobs.release.outputs.new_release_version != ""
        run: |
          git config --local user.name "Ryan Kowalewski"
          git config --local user.email "ryan@ryanjan.uk"
          VERSION="v${{ needs.release.outputs.new_release_version }}"
          mike deploy --push --update-aliases $VERSION latest
